// <auto-generated />
using System;
using Emeint.Core.BE.Media.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Emeint.Core.BE.Media.Migrations
{
    [DbContext(typeof(MediaContext))]
    [Migration("20200629174921_videos")]
    partial class videos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.BE.Media.Domain.Models.ImageData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("BinaryData")
                        .IsRequired();

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("ModifiedBy");

                    b.HasKey("Id");

                    b.ToTable("ImagesData","Media");
                });

            modelBuilder.Entity("Core.BE.Media.Domain.Models.ImageMetaData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientReferenceNumber")
                        .IsRequired();

                    b.Property<string>("Code");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("Height");

                    b.Property<int?>("ImageDataId");

                    b.Property<string>("ImagePath");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int?>("OriginalBinaryDataLength");

                    b.Property<string>("Tag");

                    b.Property<string>("TenantCode");

                    b.Property<int?>("Width");

                    b.HasKey("Id");

                    b.HasIndex("ClientReferenceNumber")
                        .IsUnique();

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("ImageDataId");

                    b.ToTable("ImagesMetaData","Media");
                });

            modelBuilder.Entity("Core.BE.Media.Domain.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("FileName");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Videos","Media");
                });

            modelBuilder.Entity("Core.BE.Media.Domain.Models.ImageMetaData", b =>
                {
                    b.HasOne("Core.BE.Media.Domain.Models.ImageData", "ImageData")
                        .WithMany()
                        .HasForeignKey("ImageDataId");
                });
#pragma warning restore 612, 618
        }
    }
}
